name: App Builder
on:
  push:
    branches:
      - main

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      app_version: ${{ steps.version.outputs.app_version }}
      date_created: ${{ steps.version.outputs.date_created }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Generate app_version
      id: version
      run: |
        echo "app_version=v$(date +'%Y.%m').${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
        echo "date_created=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT

    - name: Print app_version and date_created
      run: |
        echo "app_version: ${{ steps.version.outputs.app_version }}"
        echo "date_created: ${{ steps.version.outputs.date_created }}"

  release:
      needs: [prepare]
      permissions:
          contents: write
      strategy:
          fail-fast: false
          matrix:
              platform: [windows-latest]
      runs-on: ${{ matrix.platform }}
      defaults:
        run:
          working-directory: sources/app
      steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Rust setup
            uses: dtolnay/rust-toolchain@stable

          - name: Rust cache
            uses: swatinem/rust-cache@v2
            with:
              shared-key: ${{ runner.os }}-sast-app-tauri-target-${{ hashFiles('sources/app/src/Cargo.lock') }}
              workspaces: sources/app/src/src-tauri -> target

          - name: Install node & yarn
            uses: volta-cli/action@v4

          - name: Node cache
            uses: actions/cache@v4
            id: node_modules_cache
            with:
              path: sources/app/node_modules
              key: ${{ runner.os }}-sast-app-node_modules-${{ hashFiles('sources/app/yarn.lock') }}
              restore-keys: ${{ runner.os }}-sast-app-node_modules-

          - name: Install dependencies and lint
            run: |
                node --version
                yarn --version
                yarn install --immutable
                yarn build:nuxt
                yarn lint

          - name: Build tauri app
            uses: tauri-apps/tauri-action@v0
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
                TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
            with:
                projectPath: sources/app
                tagName: ${{ needs.prepare.outputs.app_version }}
                args: '-c ''{"package":{"version": "${{ needs.prepare.outputs.app_version }}"}}'''
                releaseName: sast ${{ needs.prepare.outputs.app_version }}
                releaseBody: See the assets to download and install this version.
